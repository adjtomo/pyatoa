# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
#                 Seisflows YAML Parameter File and Path Input
#
#   variables set to '', or `null`, will be ignored and set to default values 
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
#                                    MODULES                                  
#
# These modules correspond to the structure of the source code, determining
# which modules are loaded at runtime. Each of these modules may also 
# correspond to a sub-set of parameters below, which in turn may have custom
# parameters that relate to overwritten/super'd modules
# 
#
# PARAMETERS:
# -----------
# WORKFLOW: The method for running Seisflows
#    inversion, inversion_pyatoa, migration, thrifty_inversion, etc.
# SOLVER: External solver to use
#    specfem2d, specfem3d, specfem3d_globe, specfem3d_pyatoa
# SYSTEM: Computer architecture
#    serial, pbs, slurm, etc.
# OPTIMIZE: Optimization algorithm for the inverse problem
#    steepest_descent, LBFGS, NLCG
# LINESEARCH: Line-search algorithm to be used in optimization
#    Bracket, Backtrack
# PREPROCESS: Preprocessing schema for waveform data
#    base, Pyatoa
# POSTPROCESS: Postprocessing schema for kernel and gradients
#    base
#
# ==============================================================================
WORKFLOW: thrifty_pyatoa
SOLVER: specfem3d_pyatoa
SYSTEM: maui_lg
OPTIMIZE: LBFGS 
LINESEARCH: backtrack    
PREPROCESS: base
POSTPROCESS: base

# ==============================================================================
#
#                                   WORKFLOW
#
#           The specific set of instructions for Seisflows to follow
#
# PARAMETERS:
# -----------
# TITLE (str): Name used to submit jobs to the HPC system, defaults to
#              directory name containing this file
# BEGIN (int): First iteration to begin the workflow on, counting from 1
# END (int):   Last iteration in the workflow, must have END >= BEGIN
# NSRC (int):  Number of sources to use in the workflow. Available sources will
#              be gathered and sorted from the DATA directory
#
# ==============================================================================
TITLE: chkbd_trial
BEGIN: 1      
END: 1 

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# 
#                       CUSTOM WORKFLOW: inversion_pyatoa
#
# PARAMETERS:
# -----------
# RESUME_FROM (str): Resume a workflow from a given task, incase time out or 
#                    error encountered mid-iteration. Parameter must match
#                    method names inside workflow.inversion_pyatoa.main()
#
#                    !!! Caution, this is an advanced User parameter, its best 
#                    to just restart the iteration from the beginning to avoid 
#                    creating duplicates or skipping essential functions !!!
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
RESUME_FROM: null

# ==============================================================================
#
#                                    SYSTEM
#
#     Parameters used to interact with the compute system running Seisflows
#
# 
# PARAMETERS:
# -----------
# NTASK (int):    Number of tasks specified in submission scripts. 
#                 Corresponds to the number of sources used in the workflow
# NPROC (int):    Number of processors specified in submission scripts
# NODESIZE (int): Number of cores per node set by the system architecture
# WALLTIME (int): Job time in minutes for the entire workflow
# TASKTIME (int): Maximum job time for each task within the workflow
# ENVIRONS (str): Comma delimited environment variables to pass to `run`
#                 should be the in the format: VARNAME1=value1,VARNAME2=value2
#
# ==============================================================================
NTASK: 2
NPROC: 80
NODESIZE: 40
WALLTIME: 200
TASKTIME: 25
ENVIRONS: ''

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# 
#                           CUSTOM SYSTEM: MauiLg
#
#     Parameters specific to the New Zealand HPC cluster Maui (& Maui_ancil)
#
# PARAMETERS:
# -----------
# ACCOUNT (str):         NeSI account name
# MAIN_CLUSTER (str):    Cluster to run simulations on, e.g. maui, mahuika
# MAIN_PARTITION (str):  Partition of main cluster to submit jobs to
# ANCIL_CLUSTER (str):   Anciliary cluster for data processing using Pyatoa
# ANCIL_PARTITION (str): Partition of ancilary cluster 
# ANCIL_TASKTIME (int):  For shorter preprocessing tasktimes, 
#                        defaults = TASKTIME
# NODES (int):           Number of nodes to occupy on the cluster, 
#                        usually scales with simulation size
# CPUS_PER_TASK (int):   Multithreading options, default is 1
# SLURMARGS (str):       Extra arguments to put in slurm 'sbatch' script,
#                        should be in format '--arg1=val1 --arg2=val2' etc.
# WITH_OPENMP (bool):    Use OpenMP in job submission scripts
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ACCOUNT: nesi00263
MAIN_CLUSTER: maui
MAIN_PARTITION: nesi_research  
ANCIL_CLUSTER: maui_ancil 
ANCIL_PARTITION: nesi_prepost
ANCIL_TASKTIME: 20 
NODES: 2
CPUS_PER_TASK: 1 
SLURMARGS: --hint=nomultithread
WITH_OPENMP: False

# ==============================================================================
#
#                                    SOLVER
#
#          Control the external solver, its inputs and desired outputs
#
#
# PARAMETERS:
# -----------
# CASE (str):      Changes some options, names, for synthetic-synthetic workflow
#                  `Data` for a data-synthetic workflow
#                  `Synthetic` for a synthetic-synthetic workflow
# MATERIALS (str): Choose which parameters are used in the workflow
#                  `Elastic`: Vp, Vs used as model parameters
#                  `Acoustic`: Vp is used as model parameter 
# DENSITY (str):   Update density during inversions
#                  `Variable`: update density
#                  `Constant`: don't update density
# PRECOND (str):   Name of class for User defined preconditioner
# NT (int):        Number of time steps for simulations, must be equal to 
#                  Specfem3D Par_file NSTEP
# DT (float):      Delta, time step. Must be equal Specfem3D Par_file DT
# F0 (float):      Dominant frequency (Specfem2D only)
# SOLVERIO (str):  File type to be used by the solver, Specfem3D allows for 
#                  `fortran_binary` and `adios`
#                  Seisflows only supports `fortran_binary`
#
# ==============================================================================
CASE: Synthetic
MATERIALS: Elastic
DENSITY: Constant
PRECOND: None   
NT: 10000 
DT: 0.03
F0: .1  
SOLVERIO: fortran_binary

# ==============================================================================
#
#                                PREPROCESSING
#
#         Parameters related to observed and synthetic waveform processing
#
# PARAMETERS:
# -----------
# FORMAT (str):  Data file formats. Available: `ascii`, `su`
#
# ==============================================================================
FORMAT: ascii 

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# 
#                          CUSTOM PREPROCESSING: base
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
CHANNELS: z              # data channels to be used
NORMALIZE: 0             # normalize tracesi
FILTER: ''               # highpass, lowpass, bandpass
MUTE: 0                  # mute direct arrival
MUTECONST: 0.            # mute constant (for muting early arrivals)
MUTESLOPE: 0.            # mute slope (for muting early arrivals)

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#
#                        CUSTOM PREPROCESSING: pyatoa
# 
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
PYATOA:
    set_logging:  
        pyatoa: info       # Detailed workflow info: [info, debug, null]
        pyflex: null        # Windowing logger options
    cfgpaths:               # User defined paths to auxiliary data
        waveforms: []
        synthetics: []
        responses: []   
   
    # OBSPY 
    unit_output: DISP       # Observed waveform units; [disp, vel, acc]
    synthetic_unit: DISP    # Specfem3D synthetic units; [disp, vel, acc]
    min_period: 10.         # minimum period to filter all data in seconds
    max_period: 30.         # maximum period
    filter_corners: 4       # corners for bandpass filter, default=4
    rotate_to_rtz: False    # rotate waveforms to radial, transverse, vertical
    client: GEONET          # FDSN client for external data fetching
    start_pad: 20           # time before origintime to retrieve data
    end_pad: 350            # time after origintime to retrieve data

    # PYFLEX, PYADJOINT
    pyflex_map: hikurangi          # config map for Pyflex; see pyatoa.plugins
    adj_src_type: cc_hikurangi     # misfit function to use in Pyadjoint
    window_amp_ratio: 0.2          # extra amplitude threshold criteria; [0:1]
    fix_windows: True              # fix misfit windows between iterations

    # OUTPUT FILES
    snapshot: True             # periodically copy .h5 files incase corruption
    write_misfit_json: True    # save misfit information into a .json file 
    create_srcrcv_vtk: True    # generate .vtk files for srcrcv locations

    # PLOTTING
    plot_waveforms: True       # plot waveform figures during workflow
    plot_srcrcv_maps: True     # plot source receiver maps during workflow
    plot_misfit_maps: False    # plot misfit maps during workflow
    map_corners:               # to set the extent of the map for srcrcv maps
        lat_min: -42.5         # bottom edge in degrees
        lat_max: -37.0         # top edge in degrees
        lon_min: 173.0         # left edge in degrees
        lon_max: 178.5         # right edge in degrees
    combine_imgs: True         # combine waveforms and srcrcv maps into a .pdf
    purge_waveforms: True      # if COMBINE_IMGS; delete waveforms after combine
    purge_tiles: True          # if COMBINE_IMGS; delete intermediate imgs

# ==============================================================================
#
#                                 POSTPROCESSING
#
#               Tasks related to processing of gradient information
# 
# PARAMETERS:
# -----------
# TASKTIME_SMOOTH (int): Scales the smoothing operation, as this may take longer 
#                        than normal tasktimes. Scaling works as a multiple of
#                        SYSTEM.TASKTIME. Default is 1
# SMOOTH_H (float):      Gaussian std. for smoothing in the horizontal, meters
# SMOOTH_V (float):      Gaussian std. for smoothing in the vertical, meters
# SCALE (float):         Scaling factor
#
# ==============================================================================
TASKTIME_SMOOTH: 3 
SMOOTH_H: 1000.
SMOOTH_V: 1000.
SCALE: 1.

# ==============================================================================
#
#                                  OPTIMIZATION
#
#       Parameters for control of line search and optimization algorithms
# 
# PARAMETERS:
# -----------
# STEPCOUNTMAX (int):  Maximum allowable trial step lengths. Default=10, min=3
# STEPLENINIT (float): Initial step length guess, fraction of current model
#                      Default = 0.05
# STEPLENMAX (float):  Maximum step length allowed as fraction of current model
#                      Default = 0.5
#
# ==============================================================================
STEPCOUNTMAX: 7 
STEPLENINIT: 0.05
STEPLENMAX: 0.5

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#
#                          CUSTOM OPTIMIZATION: LBFGS
# 
# PARAMETERS:
# -----------
# LBFGSMAX (int):     Periodic LBFGS restart interval. Default = infinity
# LBFGSMEM (int):     Number of previous model updates/ gradients to 
#                     store in memory. Default = 3
# LBFGSTHRES (float): Descent direction threshold. Default = 0.0
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
LBFGSMAX: null 
LBFGSMEM: null
LBFGSTHRES: null

# ==============================================================================
#
#                               WORKFLOW OUTPUTS
#
# Parameters to control what outputs are stored permanently to disk during work
#
# OPTIONS:
# --------
# SAVEGRADIENT (bool):  Save the gradient from each iteration
# SAVEKERNELS (bool):   Save all kernels (event, misfit) from each iteration
# SAVEMODEL (bool):     Save the final model from each iteration
# SAVE_AS (str):        Format to save gradients, kernels and models
#                       `vector`: saves as .npy files. reduces file count
#                       `binary`: saves as .bin files, used by Specfem
#                       `both`:   saves as both .npy and .bin files
# SAVERESIDUALS (bool): Preprocessing, save waveform residuals
# SAVETRACES (bool):    Preprocessing, save waveforms
#
# VTK_EVENT_KERNEL (list of str):    Create .vtk files for visualization of 
#                                    event kernels. Kernels availalable:
#                                    `vs_kernel`, `vp_kernel`, `rho_kernel` 
# VTK_MISFIT_KERNEL (list of str):   Create .vtk files for visualization of
#                                    misfit kernels
# VTK_GRADIENT_KERNEL (list of str): Create .vtk files for visualization of
#                                    the gradient 
# 
# ==============================================================================
SAVEGRADIENT: False
SAVEKERNELS: False
SAVEMODEL: True
SAVE_AS: vector  
SAVERESIDUALS: False
SAVETRACES: False
# VTK_EVENT_KERNELS: 
#     - vp_kernel
#     - vs_kernel
# VTK_SUM_NOSMOOTH_KERNELS: 
#     - vp_kernel
#     - vs_kernel
# VTK_GRADIENT: 
#     - vp_kernel
#     - vs_kernel

# ==============================================================================
#
#                                    PATHS
#
#    List of paths that are passed to the Seisflows workflow for input/ouput 
#
# PARAMETERS:
# -----------
# SCRATCH:      Scratch directory to store all temporary workflow files
# OUTPUT:       Output directory to store all permanent workflow files
# MODEL_INIT:   Location of initial model for synthetics generation
# MODEL_TRUE:   Location of true model for synthetic-synthetic cases. Optional
# SPECFEM_DATA: Specfem3D `DATA` dir. containing Par_file, events and stations
# SPECFEM_BIN:  Specfem3D `bin` dir. containing Specfem executables
#
# CUSTOM PATHING:
# ---------------
# PYATOA_IO:    Location to store Pyatoa workflow files
#
# ==============================================================================
PATHS:
    SCRATCH: "./scratch"
    OUTPUT: "./output"
    MODEL_INIT: "/nesi/nobackup/nesi00263/bchow/tomo/seisflows/\
                 specfem/nz_tall_north/lowres/OUTPUT_FILES_INIT/DATABASES_MPI"
    MODEL_TRUE: "/nesi/nobackup/nesi00263/bchow/tomo/seisflows/\
                 specfem/nz_tall_north/lowres/OUTPUT_FILES_CHECKER/\
                 DATABASES_MPI"
    SPECFEM_DATA: "/nesi/nobackup/nesi00263/bchow/tomo/seisflows/specfem/\
                   nz_tall_north/lowres/sfDATA"
    SPECFEM_BIN: "/nesi/project/nesi00263/bchow/specfem/specfem3d_75e1785/\
                  bin_75e1785_CrayGNU-19.04_openmp_mpi_vectorization"
    PYATOA_IO: "./pyatoa.io"

