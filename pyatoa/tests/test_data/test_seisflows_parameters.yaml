# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
#                 Seisflows YAML Parameter File and Path Input
#
#   variables set to '', or `null`, will be ignored and set to default values 
#
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#
#                                    MODULES                                  
#
# These modules correspond to the structure of the source code, determining
# which modules are loaded at runtime. Each of these modules may also 
# correspond to a sub-set of parameters below, which in turn may have custom
# parameters that relate to overwritten/super'd modules
# 
#
# PARAMETERS:
# -----------
# WORKFLOW: The method for running Seisflows
#    inversion, migration, thrifty_inversion, etc.
# SOLVER: External solver to use
#    specfem2d, specfem3d, specfem3d_globe
# SYSTEM: Computer architecture
#    serial, pbs, slurm, etc.
# OPTIMIZE: Optimization algorithm for the inverse problem
#    steepest_descent, LBFGS, NLCG
# LINESEARCH: Line-search algorithm to be used in optimization
#    Bracket, Backtrack
# PREPROCESS: Preprocessing schema for waveform data
#    base, Pyatoa
# POSTPROCESS: Postprocessing schema for kernel and gradients
#    base
#
# ==============================================================================
WORKFLOW: thrifty_maui
SOLVER: specfem3d_maui
SYSTEM: maui_lg
OPTIMIZE: LBFGS 
LINESEARCH: backtrack
PREPROCESS: pyatoa_nz
POSTPROCESS: base

# ==============================================================================
#
#                                   WORKFLOW
#
#           The specific set of instructions for Seisflows to follow
#
# PARAMETERS:
# -----------
# TITLE (str): Name used to submit jobs to the HPC system, defaults to
#              directory name containing this file
# BEGIN (int): First iteration to begin the workflow on, counting from 1
# END (int):   Last iteration in the workflow, must have END >= BEGIN
# NSRC (int):  Number of sources to use in the workflow. Available sources will
#              be gathered and sorted from the DATA directory
#
# ==============================================================================
TITLE: decluster
BEGIN: 18
END: 18
VERBOSE: True

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# 
#                            CUSTOM WORKFLOW: inversion
#
# PARAMETERS:
# -----------
# RESUME_FROM (str): Resume a workflow from a given task, incase time out or 
#                    error encountered mid-iteration. Parameter must match
#                    method names inside workflow.inversion_pyatoa.main()
# STOP_AFTER (str):  Stop the workflow after completing the given function
#                    Useful for interogating the inversion mid-iteration
#
#                    Available functions:
#                       initialize, evaluate_gradient, write_gradient
#                       compute_direction, line_search, finalize, clean
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
RESUME_FROM: null
STOP_AFTER: initialize

# ==============================================================================
#
#                               SYSTEM: SlurmLg
#
#     Parameters used to interact with the compute system running Seisflows
#
# 
# PARAMETERS:
# -----------
# NTASK (int):    Number of tasks specified in submission scripts. 
# NPROC (int):    Number of processors specified in submission scripts
# NODESIZE (int): Number of cores per node set by the system architecture
# TASKTIME (int): Maximum job time for each task within the workflow
# ENVIRONS (str): Comma delimited environment variables to pass to `run`
#
# ==============================================================================
NTASK: 60
NPROC: 40
NODESIZE: 40
WALLTIME: 1400
TASKTIME: 25
ENVIRONS: ''

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# 
#                           CUSTOM SYSTEM: MauiLg
#
#     Parameters specific to the New Zealand HPC cluster Maui (& Maui_ancil)
#
# PARAMETERS:
# -----------
# ACCOUNT (str):         NeSI account name
# ANCIL_TASKTIME (int):  For shorter preprocessing tasktimes, 
#                        defaults = TASKTIME
# SLURMARGS (str):       Extra arguments to put in slurm 'sbatch' script,
#                        should be in format '--arg1=val1 --arg2=val2' etc.
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
ACCOUNT: nesi00263
ANCIL_TASKTIME: 10
SLURMARGS: --hint=nomultithread

# ==============================================================================
#
#                                    SOLVER
#
#          Control the external solver, its inputs and desired outputs
#
#
# PARAMETERS:
# -----------
# CASE (str):          Changes some options, names, for synthetic-synthetic case
#                      `Data` for a data-synthetic workflow
#                      `Synthetic` for a synthetic-synthetic workflow
# MATERIALS (str):     Choose which parameters are used in the workflow
#                      `Elastic`: Vp, Vs used as model parameters
#                      `Acoustic`: Vp is used as model parameter 
# DENSITY (str):       Update density during inversions
#                      `Variable`: update density
#                      `Constant`: don't update density
# PRECOND (str):       Name of class for User defined preconditioner
# NT (int):            Number of time steps for simulations, must be equal to 
#                      Specfem3D Par_file NSTEP
# DT (float):          Delta, time step. Must be equal Specfem3D Par_file DT
# F0 (float):          Dominant frequency (Specfem2D only)
# SOURCE_PREFIX (str): Prefix to look for source files in PATH.DATA, e.g. if 
#                      prefix is CMTSOLUTION, Seisflows will look for files 
#                      labelled CMTSOLUTION_* 
# SOLVERIO (str):      File type to be used by the solver, Specfem3D allows for 
#                      `fortran_binary` and `adios`
#                      Seisflows currently supports: `fortran_binary`
#
# ==============================================================================
CASE: Data
MATERIALS: Elastic
DENSITY: Constant
PRECOND: null
NT: 20000
DT: 0.015
F0: .1
SOURCE_PREFIX: CMTSOLUTION
SOLVERIO: fortran_binary

# ==============================================================================
#
#                                PREPROCESSING
#
#         Parameters related to observed and synthetic waveform processing
#
# PARAMETERS:
# -----------
# FORMAT (str):  Data file formats. Available: `ascii`, `su`
# COMPONENTS (str): Components to use for generating data, formatted as a single
#   string. For example, if Z and N components, should be 'ZN'
#
# ==============================================================================
FORMAT: ascii 
COMPONENTS: ZNE

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# 
#                          CUSTOM PREPROCESSING: base
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
NORMALIZE: null          # normalize traces
FILTER: null             # highpass, lowpass, bandpass
MUTE: null               # mute direct arrival
MUTECONST: 0.            # mute constant (for muting early arrivals)
MUTESLOPE: 0.            # mute slope (for muting early arrivals)

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#
#                        CUSTOM PREPROCESSING: pyatoa
#
#        Parameters related to preprocessing using the package Pyatoa
#        Will be used in the Pyaflowa workflow, or passed to the Config
#
# PARAMETERS:
# -----------
# LOGGING (str):          [null, warning, info, debug] level for log statements
# UNIT_OUTPUT (str):      [disp, vel, acc] desired units of the observed data
# MIN_PERIOD (float):     Low corner period in seconds for bandpass filter
# MAX_PERIOD (float):     High corner period in seconds for bandpass filter
# CORNERS (int):          Number of corners in bandpass (default=4)
# ROTATE (bool):          Rotate from North/East/Z to Radial/Transverse/Z 
# CLIENT (str):           ObsPy FDSN client to get data externally 
# START_PAD (int):        For observed data, length of data in seconds to get
#                         before origin time. Should match or exceed 
#                         synthetic t0. Should be positive 
# END_PAD (int):          Same as start_pad but for after origin time. Should be
#                         longer than PAR.NT * PAR.DT    
# PYFLEX_PRESET (str):    Optional preset map for Pyflex, see pyatoa plugins
# ADJ_SRC_TYPE (str):     [cc, mt, wav] Adjoint source type for Pyadjoint 
# FIX_WINDOWS (bool/str): [True (bool), False (bool), ITER (str), ONCE (str)]
#                         True: Fix windows for every function evaluation
#                               except for the very first one.
#                         False: Evaluate new windows each function evaluation
#                         ITER: Evaluate new windows only at new iterations, 
#                               but not during line search
#                         ONCE: Evaluate new windows at the first function eval
#                               of a submitted or resumed workflow
# SNAPSHOT (bool):        Duplicate .h5 output files on disk for redundancy,
#                         Occurs at the end of each iteration.
# PLOT (bool):            Plot waveforms and maps at each function evaluation.
# MAP_CORNERS (dict):     Optional list of corners to feed into basemap which
#                         defines the region for generating source-rcv maps.
#                         If 'null', will dynamically choose map bounds.
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
LOGGING: debug
UNIT_OUTPUT: DISP       
MIN_PERIOD: 8.         
MAX_PERIOD: 20.         
ROTATE: False
CORNERS: 4       
CLIENT: GEONET
START_PAD: 20           
END_PAD: 350           
PYFLEX_PRESET: nznorth_8-30s
ADJ_SRC_TYPE: cc
FIX_WINDOWS: once
SNAPSHOT: True     
PLOT: True
MAP_CORNERS: null

# ==============================================================================
#
#                                 POSTPROCESSING
#
#               Tasks related to processing of gradient information
# 
# PARAMETERS:
# -----------
# SMOOTH_H (float):      Gaussian half-width for horizontal smoothing in meters
# SMOOTH_V (float):      Gaussian half-width for vertical smoothing in meters
# NOTE (on smoothing):   Gaussian full-width is ~= sqrt(8) * half_width
# SCALE (float):         Scaling factor
#
# ==============================================================================
SMOOTH_H: 8500.
SMOOTH_V: 6000.
TASKTIME_SMOOTH: 1
SCALE: 1.

# ==============================================================================
#
#                                  OPTIMIZATION
#
#       Parameters for control of line search and optimization algorithms
# 
# PARAMETERS:
# -----------
# STEPCOUNTMAX (int):  Maximum allowable trial step lengths. Default=10, min=3
# STEPLENINIT (float): Initial step length guess, fraction of current model
#                      Default = 0.05
# STEPLENMAX (float):  Maximum step length allowed as fraction of current model
#                      Default = 0.5
#
# ==============================================================================
STEPCOUNTMAX: 4
STEPLENINIT: 0.025
STEPLENMAX: 0.5

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#
#                          CUSTOM OPTIMIZATION: LBFGS
# 
# PARAMETERS:
# -----------
# LBFGSMAX (int):      Periodic LBFGS restart interval. Default = infinity
# LBFGSMEM (int):      Number of previous model updates/ gradients to 
#                      store in memory. Default = 3
# LBFGSTHRESH (float): Descent direction threshold. If the angle between the new
#                      and current descent direction is greater than 90deg minus
#                      LBFGSTHRESH, then a restart is applied. Default = 0.0
#
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
LBFGSMAX: null
LBFGSMEM: null
LBFGSTHRESH: null

# ==============================================================================
#
#                               WORKFLOW OUTPUTS
#
# Parameters to control what outputs are stored permanently to disk during work
#
# OPTIONS:
# --------
# SAVEGRADIENT (bool):  Save the gradient from each iteration
# SAVEKERNELS (bool):   Save all kernels (event, misfit) from each iteration
# SAVEMODEL (bool):     Save the final model from each iteration
# SAVE_AS (str):        Format to save gradients, kernels and models
#                       `vector`: saves as .npy files. reduces file count
#                       `binary`: saves as .bin files, used by Specfem
#                       `both`:   saves as both .npy and .bin files
# SAVERESIDUALS (bool): Preprocessing, save waveform residuals
# SAVETRACES (bool):    Preprocessing, save waveforms
# 
# ==============================================================================
SAVEGRADIENT: True
SAVEKERNELS: False
SAVEMODEL: True
SAVEAS: binary  
SAVERESIDUALS: False
SAVETRACES: False

# ==============================================================================
#
#                                    PATHS
#
#    List of paths that are passed to the Seisflows workflow for input/ouput 
#
# PARAMETERS:
# -----------
# SCRATCH:      Scratch directory to store all temporary workflow files
# OUTPUT:       Output directory to store all permanent workflow files
# MODEL_INIT:   Location of initial model for synthetics generation
# MODEL_TRUE:   Location of true model for synthetic-synthetic cases. Optional
# SPECFEM_DATA: Specfem3D `DATA` dir. containing Par_file, events and stations
# SPECFEM_BIN:  Specfem3D `bin` dir. containing Specfem executables
#
# CUSTOM PATHING:
# ---------------
# DATA:     Location of any observation data, must be in the form
#           path/to/DATA/EVENT_ID/NN.SSS.CCC.sem?
#           or if using Pyatoa preprocess class
#               path/to/DATA/mseeds/... (seed naming convention)
#               path/to/DATA/seed/... (seed naming convention)
#
# ==============================================================================
PATHS:
    SCRATCH: "./scratch"
    OUTPUT: "./output"
    SPECFEM_DATA: "./sfDATA"
    MODEL_INIT: "/scale_wlg_nobackup/filesets/nobackup/nesi00263/bchow/tomo/\
                 seisflows/specfem/nznorth/1node_10s/\
                 OUTPUT_FILES_INIT/DATABASES_MPI/"
    SPECFEM_BIN: "/scale_wlg_persistent/filesets/project/nesi00263/bchow/\
                  specfem/specfem3d_75e1785/\
                  bin_75e1785_CrayGNU-19.04_openmp_mpi_vectorization"
    DATA: "/scale_wlg_persistent/filesets/home/chowbr/primer/auxiliary/data"
