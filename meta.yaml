# Note: there are many handy hints in comments in this example -- remove them when you've finalized your recipe

# Jinja variables help maintain the recipe as you'll update the version only here.
# Using the name variable with the URL in line 14 is convenient
# when copying and pasting from another recipe, but not really needed.
{% set name = "pyatoa" %}
{% set version = "0.1.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/bch0w/pyatoa/archive/v{{ version }}.tar.gz
  sha256: e08819ff0103dada0a29f7125c3d931eab740aa4d7d7262023e65bb1d3103132

build:
  # Uncomment the following line if the package is pure Python and the recipe is exactly the same for all platforms.
  # It is okay if the dependencies are not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python for more details.
  # noarch: python
  number: 0
  # If the installation is complex, or different between Unix and Windows, use separate bld.bat and build.sh files instead of this key.
  # By default, the package will be built for the Python versions supported by conda-forge and for all major OSs.
  # Add the line "skip: True  # [py<35]" (for example) to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit to Windows.
  skip: True  # [py<37]
  script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  build:
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('c') }}
  host:
    - python
    - pip
  run:
    - python

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - pyatoa
    - pyatoa.tests
  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.
  requires:
    - pytest
  commands:
    - pytest tests/

about:
  home: https://github.com/bch0w/pyatoa
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: GPL-3.0
  # The license_family, i.e. "BSD" if license is "BSD-3-Clause". (optional)
  license_family: GPL
  # It is strongly encouraged to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE
  summary: 'A misfit assessment toolbox for full waveform tomography '
  # The remaining entries in this section are optional, but recommended.
  description: |
    Pyatoa is a waveform-based misfit quantification package,
    with additional tools for measurement aggregation, and visualizations of
    inversion results. It is meant to facilitate the assessment of s
    eismic inversions.
  doc_url: https://pyatoa.readthedocs.io/
  dev_url: https://github.com/bch0w/pyatoa/tree/devel

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - bch0w

# Old meta.yaml file
#package:
#  name: pyatoa
#  version: 0.1
#
#source:
#  git_rev:
#  git_url: https://github.com/bch0w/pyatoa.git
#
## build:
##   script: python -m setup.py install
#
#requirements:
#  build:
#    - python
#    - setuptools
#    - pip
#    - obspy 1.2.2
#    - matplotlib 3.1.1
#    - pyasdf 0.7.2
#    - pandas 1.1.0
#    - pyyaml 5.3.1
#    - proj4 5.2.0
#    - http://github.com/matplotlib/basemap/tarball/master#egg=package-1.2.2
#    - http://github.com/bch0w/pyflex/tarball/return_reject_windows
#    - http://github.com/krischer/pyadjoint/tarball/master
#
#  run:
#    - python
#    - obspy 1.2.2
#    - matplotlib 3.1.1
#    - pyasdf 0.7.2
#    - pandas 1.1.0
#    - pyyaml 5.3.1
#    - proj4 5.2.0
#    - http://github.com/matplotlib/basemap/tarball/master#egg=package-1.2.2
#    - http://github.com/bch0w/pyflex/tarball/return_reject_windows
#    - http://github.com/krischer/pyadjoint/tarball/master
#
#about:
#  home: https://pyatoa.readthedocs.io/en/latest/
